---
name: Release

on:
  release:
    types: [published]

jobs:
  release:
    name: Releasing to PyPi
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        id: python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Set pip cache dir
        id: pip-cache
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: Restore cached Python pip packages
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: pip-${{ runner.os }}-v2-${{ steps.python.outputs.python-version }}-${{ hashFiles('.github/workflows/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-v2-${{ steps.python.outputs.python-version }}-

      - name: Install workflow dependencies
        run: |
          pip install -r .github/workflows/requirements.txt
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Restore cached Python venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: >-
            venv-${{ runner.os }}-v2-${{ steps.python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
            venv-${{ runner.os }}-v2-${{ steps.python.outputs.python-version }}-

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Set package version
        run: |
          version="${{ github.event.release.tag_name }}"
          version="${version,,}"
          version="${version#v}"
          poetry version --no-interaction "${version}"

      - name: Build package
        run: poetry build --no-interaction

      - name: Publish to PyPi
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi "${PYPI_TOKEN}"
          poetry publish --no-interaction
